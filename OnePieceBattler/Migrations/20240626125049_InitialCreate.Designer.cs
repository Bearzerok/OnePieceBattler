// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnePieceBattler.Data;

#nullable disable

namespace OnePieceBattler.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240626125049_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("OnePieceBattler.Models.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBattleOver")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPlayer1Turn")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player1Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player2Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player2Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("OnePieceBattler.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArmamentHakiPower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackPower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConquerorHakiPower")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefensePower")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ObservationHakiPower")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArmamentHakiPower = 0,
                            AttackPower = 20,
                            ConquerorHakiPower = 0,
                            DefensePower = 10,
                            Description = "Monkey D. Luffy",
                            Health = 100,
                            ImagePath = "/images/characters/luffy.png",
                            Name = "Luffy",
                            ObservationHakiPower = 0
                        },
                        new
                        {
                            Id = 2,
                            ArmamentHakiPower = 0,
                            AttackPower = 0,
                            ConquerorHakiPower = 0,
                            DefensePower = 10,
                            Description = "Zoro the Pirate Hunter",
                            Health = 200,
                            ImagePath = "/images/characters/zoro.png",
                            Name = "Zoro",
                            ObservationHakiPower = 0
                        },
                        new
                        {
                            Id = 3,
                            ArmamentHakiPower = 0,
                            AttackPower = 20,
                            ConquerorHakiPower = 0,
                            DefensePower = 10,
                            Description = "Marco the Phoenix, Hybrid From",
                            Health = 100,
                            ImagePath = "/images/characters/marco_hybrid.png",
                            Name = "Marco",
                            ObservationHakiPower = 0
                        },
                        new
                        {
                            Id = 4,
                            ArmamentHakiPower = 0,
                            AttackPower = 0,
                            ConquerorHakiPower = 0,
                            DefensePower = 10,
                            Description = "Gol D. Roger, The Pirate King",
                            Health = 200,
                            ImagePath = "/images/characters/roger.png",
                            Name = "Gol D. Roger",
                            ObservationHakiPower = 0
                        },
                        new
                        {
                            Id = 5,
                            ArmamentHakiPower = 0,
                            AttackPower = 20,
                            ConquerorHakiPower = 0,
                            DefensePower = 10,
                            Description = "Heavenly Yaksha",
                            Health = 100,
                            ImagePath = "/images/characters/doflamingo.png",
                            Name = "Donquixote Doflaming",
                            ObservationHakiPower = 0
                        },
                        new
                        {
                            Id = 6,
                            ArmamentHakiPower = 0,
                            AttackPower = 0,
                            ConquerorHakiPower = 0,
                            DefensePower = 10,
                            Description = "Marco the Phoenix, Zoan Form",
                            Health = 200,
                            ImagePath = "/images/characters/marco_zoan.png",
                            Name = "Marco",
                            ObservationHakiPower = 0
                        });
                });

            modelBuilder.Entity("OnePieceBattler.Models.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BattleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovePower")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BattleId");

                    b.ToTable("Moves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovePower = 10,
                            Name = "Punch"
                        },
                        new
                        {
                            Id = 2,
                            MovePower = 20,
                            Name = "Slash"
                        });
                });

            modelBuilder.Entity("OnePieceBattler.Models.Battle", b =>
                {
                    b.HasOne("OnePieceBattler.Models.Character", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnePieceBattler.Models.Character", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player1");

                    b.Navigation("Player2");
                });

            modelBuilder.Entity("OnePieceBattler.Models.Move", b =>
                {
                    b.HasOne("OnePieceBattler.Models.Battle", null)
                        .WithMany("Moves")
                        .HasForeignKey("BattleId");
                });

            modelBuilder.Entity("OnePieceBattler.Models.Battle", b =>
                {
                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
